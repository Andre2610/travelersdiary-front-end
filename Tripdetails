<Flex flexDirection="column" justify="center" w="80vw" m="auto" mt="3rem">
      <Flex
        w="100%"
        justify="space-evenly"
        my="3rem"
        textAlign="center"
        bg="blackAlpha.400"
        maxH="60vh"
        minH="40vh"
      >
        <Box w="50%">
          <Heading as="h2" mb="2rem">
            {oneTrip.tripTitle}
          </Heading>
          {!oneTrip.posts[0] ? (
            <>
              <Heading mt="3rem">No Posts yet</Heading>
            </>
          ) : (
            <Tabs variant="soft-rounded" variantColor="gray">
              <Flex w="100%" flexDirection="row" justify="space-around">
                <TabList d="row" alignSelf="left" w="35%">
                  {oneTrip.posts
                    .sort((a: Post, b: Post) => a.id - b.id)
                    .map((post, i) => {
                      return (
                        <Tab
                          key={i}
                          color="whiteAlpha"
                          h="4rem"
                          w="95%"
                          onClick={(e) => tabOnClickHandler(i, post)}
                          className="navbtn"
                        >
                          {i + 1}
                        </Tab>
                      );
                    })}
                </TabList>
                <TabPanels float="right" w="60%">
                  <Slider pictures={oneTrip.posts[postIndex].pictures} />;
                </TabPanels>
              </Flex>
            </Tabs>
          )}
        </Box>
        {/* <Box w="40%" justifyContent="center" alignItems="center" mt=".5rem">
          {googleMapsRender(oneTrip.posts, moveToMarker)}
        </Box> */}
      </Flex>

      {user.token && !oneTrip.endDate && user.id === oneTrip.userId ? (
        <>
          <Flex w="30vw" m="auto">
            <NewPostModal />
            <Button
              minW="10vw"
              maxW="10vw"
              className="navbtn"
              variantColor="customRed"
              m="auto"
              onClick={(e) => set_toggle_endDate(!toggle_endDate)}
            >
              End Trip
            </Button>
          </Flex>
          <Collapse mt={4} isOpen={toggle_endDate} m="auto" w="15vw">
            <FormControl>
              <InputGroup maxH="10vh">
                <Flex
                  w="5vw"
                  d="column"
                  style={{ height: "10vh" }}
                  m="auto"
                  mt={2}
                >
                  <FormLabel htmlFor="text">Please confirm the date</FormLabel>
                  <Input
                    type="date"
                    variant="flushed"
                    onChange={(e: any) => set_endDate(e.target.value)}
                  />
                </Flex>
              </InputGroup>
            </FormControl>
            <Flex>
              <Button
                minW="10vw"
                maxW="10vw"
                className="navbtn"
                m="auto"
                onClick={(e) => endtrip(e)}
              >
                Confirm
              </Button>
            </Flex>
          </Collapse>
        </>
      ) : null}
      {oneTrip.posts
        .sort((a, b) => a.id - b.id)
        .map((post) => {
          const { id, title, content, latitude, longitude, pictures } = post;
          return (
            <Box
              key={id}
              bg="blackAlpha.400"
              w="60vw"
              m="auto"
              p="15px"
              my="3vh"
              border="2px solid gray"
              overflow="hidden"
            >
              <Box>{postsRender(title, content, pictures)}</Box>
            </Box>
          );
        })}
    </Flex>



    <Box w="90vw" m="auto" mt="6rem">
      <Box>
        <Heading textAlign="center" mb="4rem">
          {oneTrip.tripTitle}
        </Heading>
      </Box>
      {!oneTrip.posts[0] ? (
        <>
          <Heading textAlign="center" my="3rem">
            No Posts yet
          </Heading>
          {tripControlMenu()}
        </>
      ) : (
        <Tabs variant="soft-rounded" variantColor="gray">
          <Box w="100%">
            {user.token && !oneTrip.endDate && user.id === oneTrip.userId ? (
              <>{tripControlMenu()}</>
            ) : null}
            <TabList d="row" alignSelf="left" w="25%" position="fixed">
              {oneTrip.posts
                .sort((a: Post, b: Post) => a.id - b.id)
                .map((post, i) => {
                  return (
                    <Tab
                      key={i}
                      color="whiteAlpha"
                      h="auto"
                      w="100%"
                      my={5}
                      onClick={(e) => tabOnClickHandler(i, post)}
                      className="navbtn"
                    >
                      {post.title}
                    </Tab>
                  );
                })}
            </TabList>
            <Box w="40%" justifyContent="center" alignItems="center" mt=".5rem">
              {googleMapsRender(oneTrip.posts, moveToMarker)}
            </Box>
            <TabPanels float="right" w="60%" border="2px solid gray">
              {postsRender(oneTrip.posts[postIndex])}
            </TabPanels>
          </Box>
        </Tabs>
      )}
    </Box>
  );